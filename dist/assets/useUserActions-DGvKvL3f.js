import{c as u,a as g,G as f,s}from"./index-Ba-_IHuQ.js";/**
 * @license lucide-react v0.515.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const y=[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"m15 9-6 6",key:"1uzhvr"}],["path",{d:"m9 9 6 6",key:"z0biqf"}]],A=u("circle-x",y),k=n=>{const{currentLanguage:e}=g(),{toast:a}=f();return{toggleApproval:async(t,r)=>{try{console.log("Toggling approval for user:",t,"current status:",r);const{error:o}=await s.from("profiles").update({is_approved:!r,updated_at:new Date().toISOString()}).eq("id",t);if(o)throw console.error("Error updating approval:",o),o;a({title:e==="ar"?"نجح":"Success",description:e==="ar"?"تم تحديث حالة الموافقة":"Approval status updated"}),await n()}catch(o){console.error("Error in toggleApproval:",o),a({title:e==="ar"?"خطأ":"Error",description:e==="ar"?"فشل في تحديث الحالة":"Failed to update status",variant:"destructive"})}},toggleVerification:async(t,r)=>{try{console.log("Toggling verification for user:",t,"current status:",r);const{error:o}=await s.from("profiles").update({is_verified:!r,updated_at:new Date().toISOString()}).eq("id",t);if(o)throw console.error("Error updating verification:",o),o;a({title:e==="ar"?"نجح":"Success",description:e==="ar"?"تم تحديث حالة التوثيق":"Verification status updated"}),await n()}catch(o){console.error("Error in toggleVerification:",o),a({title:e==="ar"?"خطأ":"Error",description:e==="ar"?"فشل في تحديث حالة التوثيق":"Failed to update verification status",variant:"destructive"})}},rejectUser:async t=>{try{console.log("Rejecting user and resetting to client:",t);const{error:r}=await s.from("profiles").update({user_type:"client",is_approved:!0,updated_at:new Date().toISOString()}).eq("id",t);if(r)throw console.error("Error rejecting user:",r),r;a({title:e==="ar"?"نجح":"Success",description:e==="ar"?"تم رفض الطلب وتحويل المستخدم إلى عميل":"Request rejected and user converted to client"}),await n()}catch(r){console.error("Error in rejectUser:",r),a({title:e==="ar"?"خطأ":"Error",description:e==="ar"?"فشل في رفض الطلب":"Failed to reject request",variant:"destructive"})}},updateUserType:async(t,r)=>{try{console.log("Updating user type for:",t,"to:",r);const o=r==="client"||r==="support",{error:i}=await s.from("profiles").update({user_type:r,is_approved:o,updated_at:new Date().toISOString()}).eq("id",t);if(i)throw console.error("Error updating user type:",i),i;a({title:e==="ar"?"نجح":"Success",description:e==="ar"?"تم تحديث نوع المستخدم":"User type updated"}),await n()}catch(o){console.error("Error in updateUserType:",o),a({title:e==="ar"?"خطأ":"Error",description:e==="ar"?"فشل في تحديث نوع المستخدم":"Failed to update user type",variant:"destructive"})}},deleteUser:async(t,r)=>{const o=e==="ar"?`هل أنت متأكد من حذف المستخدم ${r}؟ سيتم حذف جميع بياناته نهائياً.`:`Are you sure you want to delete user ${r}? All their data will be permanently deleted.`;if(confirm(o))try{console.log("Deleting user:",t);const{error:i}=await s.from("favorites").delete().eq("user_id",t);i&&console.error("Error deleting favorites:",i);const{error:c}=await s.from("properties").delete().eq("created_by",t);c&&console.error("Error deleting properties:",c);const{error:p}=await s.from("property_views").delete().eq("viewer_user_id",t);p&&console.error("Error deleting property views:",p);const{error:d}=await s.from("profiles").delete().eq("id",t);if(d)throw console.error("Error deleting profile:",d),d;try{const{error:l}=await s.auth.admin.deleteUser(t);l&&console.warn("Could not delete from auth, but profile deleted:",l)}catch(l){console.warn("Could not delete from auth, but profile deleted:",l)}a({title:e==="ar"?"نجح":"Success",description:e==="ar"?"تم حذف المستخدم بنجاح":"User deleted successfully"}),await n()}catch(i){console.error("Error in deleteUser:",i),a({title:e==="ar"?"خطأ":"Error",description:(i==null?void 0:i.message)||(e==="ar"?"فشل في حذف المستخدم":"Failed to delete user"),variant:"destructive"})}},approveAllPending:async t=>{try{if(t.length===0){a({title:e==="ar"?"تنبيه":"Notice",description:e==="ar"?"لا توجد طلبات معلقة":"No pending requests"});return}const{error:r}=await s.from("profiles").update({is_approved:!0,updated_at:new Date().toISOString()}).in("id",t);if(r)throw r;a({title:e==="ar"?"نجح":"Success",description:e==="ar"?"تم الموافقة على جميع الطلبات":"All requests approved"}),await n()}catch(r){console.error("Error approving all pending:",r),a({title:e==="ar"?"خطأ":"Error",description:e==="ar"?"فشل في الموافقة على الطلبات":"Failed to approve requests",variant:"destructive"})}},toggleSuspension:async(t,r)=>{try{if(console.log("Toggling suspension for user:",t,"current status:",r),!r&&!confirm(e==="ar"?"هل أنت متأكد من إيقاف هذا المستخدم؟":e==="tr"?"Bu kullanıcıyı askıya almak istediğinizden emin misiniz?":"Are you sure you want to suspend this user?"))return;const{data:i,error:c}=await s.from("profiles").update({is_suspended:!r,updated_at:new Date().toISOString()}).eq("id",t).select("*").single();if(c)throw console.error("Suspension update error:",c),c;console.log("Suspension updated successfully:",i),a({title:e==="ar"?"نجح":"Success",description:r?e==="ar"?"تم إلغاء إيقاف المستخدم بنجاح":e==="tr"?"Kullanıcı başarıyla aktifleştirildi":"User unsuspended successfully":e==="ar"?"تم إيقاف المستخدم بنجاح":e==="tr"?"Kullanıcı başarıyla askıya alındı":"User suspended successfully"}),await n()}catch(o){console.error("Error in toggleSuspension:",o),a({title:e==="ar"?"خطأ":"Error",description:(o==null?void 0:o.message)||(r?e==="ar"?"فشل في إلغاء إيقاف المستخدم":e==="tr"?"Kullanıcı aktifleştirilemedi":"Failed to unsuspend user":e==="ar"?"فشل في إيقاف المستخدم":e==="tr"?"Kullanıcı askıya alınamadı":"Failed to suspend user"),variant:"destructive"})}}}};export{A as C,k as u};
